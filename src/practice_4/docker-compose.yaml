x-kafka-base: &kafka-base
  image: "bitnami/kafka:3.7.0"
  environment: &kafka-env
    KAFKA_ENABLE_KRAFT: "yes"
    KAFKA_CFG_ALLOW_PLAINTEXT_LISTENER: "yes"
    ALLOW_PLAINTEXT_LISTENER: "yes"
    KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    BITNAMI_DEBUG: "yes"
    KAFKA_CFG_PROCESS_ROLES: broker,controller
    KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
    KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT

services:
  kafka-init:
    image: bitnami/kafka:latest
    depends_on:
      kafka-0:
        condition: service_healthy
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
    entrypoint:
      - /bin/sh
      - -c
      - |
        until kafka-topics.sh --bootstrap-server kafka-0:9092 --list; do
          echo "Waiting for Kafka..."
          sleep 5
        done
        if ! kafka-topics.sh --bootstrap-server kafka-0:9092 --list | grep -q "^balanced_topic"; then
          kafka-topics.sh --create \
            --topic balanced_topic \
            --bootstrap-server kafka-0:9092 \
            --partitions 8 \
            --replication-factor 3
          echo "Topic balanced_topic created"
        else
          echo "Topic balanced_topic already exists"
        fi
    restart: "no"

  kafka-0:
    <<: *kafka-base
    hostname: kafka-0
    ports:
      - "9094:9094"
    container_name: kafka-0
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:9092,EXTERNAL://localhost:9094
    volumes:
      - ./kafka-0/volumes/data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-1:
    <<: *kafka-base
    hostname: kafka-1
    ports:
      - "9095:9095"
    container_name: kafka-1
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9095,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,EXTERNAL://localhost:9095
    volumes:
      - ./kafka-1/volumes/data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-2:
    <<: *kafka-base
    hostname: kafka-2
    ports:
      - "9096:9096"
    container_name: kafka-2
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9096,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,EXTERNAL://localhost:9096
    volumes:
      - ./kafka-2/volumes/data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.0
    ports:
      - "8080:8080"
    container_name: kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=kraft
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092,kafka-1:9092,kafka-2:9092
