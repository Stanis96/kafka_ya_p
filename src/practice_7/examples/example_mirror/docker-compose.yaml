version: '3.8'

services:
 kafka-source:
   image: bitnami/kafka:3.7
   hostname: kafka-source
   container_name: kafka-source
   ports:
     - "9092:9092"
   environment:
     KAFKA_ENABLE_KRAFT: yes
     ALLOW_PLAINTEXT_LISTENER: yes
     KAFKA_KRAFT_CLUSTER_ID: kraft-source-cluster
     KAFKA_CFG_NODE_ID: 1
     KAFKA_CFG_PROCESS_ROLES: broker,controller
     KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
     KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-source:9093
     KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
     KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-source:9092
     KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
     KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
   volumes:
     - kafka_source_data:/bitnami/kafka
   networks:
     - kraft-net

 kafka-destination:
   image: bitnami/kafka:3.7
   hostname: kafka-destination
   container_name: kafka-destination
   ports:
     - "9093:9092"
   environment:
     KAFKA_ENABLE_KRAFT: yes
     ALLOW_PLAINTEXT_LISTENER: yes
     KAFKA_KRAFT_CLUSTER_ID: kraft-dest-cluster
     KAFKA_CFG_NODE_ID: 1
     KAFKA_CFG_PROCESS_ROLES: broker,controller
     KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
     KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-destination:9095
     KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9095
     KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-destination:9092
     KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
     KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
   volumes:
     - kafka_dest_data:/bitnami/kafka
   networks:
     - kraft-net

 topic-creation:
   image: bitnami/kafka:3.7
   depends_on:
     - kafka-source
   command: >
     bash -c "sleep 10 &&
              ! kafka-topics.sh --bootstrap-server kafka-source:9092 --list | grep -q '^topic-to-mirror$' &&
              kafka-topics.sh --bootstrap-server kafka-source:9092 --create --topic topic-to-mirror --partitions 10 --replication-factor 1 || echo 'Topic already exists'"
   networks:
     - kraft-net

 dummy-generation:
   image: bitnami/kafka:3.7
   depends_on:
     - kafka-source
   command: >
     bash -c "sleep 15 &&
              kafka-topics.sh --bootstrap-server kafka-source:9092 --list | grep -q '^topic-to-mirror$' &&
              seq 10000 | kafka-console-producer.sh --bootstrap-server kafka-source:9092 --topic topic-to-mirror"
   networks:
     - kraft-net

 mirror-maker:
   image: confluentinc/cp-kafka:7.4.4
   volumes:
     - ./consumer.cfg:/opt/bitnami/kafka/config/consumer.properties
     - ./producer.cfg:/opt/bitnami/kafka/config/producer.properties
   depends_on:
     - kafka-source
     - kafka-destination
   command: >
     bash -c "
         echo 'bootstrap.servers=kafka-source:9092' > /tmp/consumer.properties &&
         echo 'group.id=mirror-maker-group' >> /tmp/consumer.properties &&
         echo 'bootstrap.servers=kafka-destination:9092' > /tmp/producer.properties &&
         kafka-mirror-maker --consumer.config /tmp/consumer.properties --producer.config /tmp/producer.properties --whitelist topic-to-mirror --num.streams 1"
   networks:
     - kraft-net


volumes:
 kafka_source_data:
 kafka_dest_data:


networks:
 kraft-net:
   driver: bridge
